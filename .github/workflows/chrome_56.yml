# This workflow is a convenient way to run flaky tests.  Go down to the
# "Run tests" step to read about how to add tests to the TESTS array.

# The built-in `secrets.GITHUB_TOKEN` token is limited in what it can do so a personal
# access token is used in certain situations.  e.g. Accessing another repository or
# having a workflow trigger another workflow.

name: Test (QA Flaky)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Install libgtk2.0-0
        run: |
          sudo apt-get update
          sudo apt-get install libgtk2.0-0

      - uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 429280
          chrome-path: /usr/local/bin/custom-chromium-browser/
        id: setup-chrome
      - run: |
          echo Installed chromium version: ${{ steps.setup-chrome.outputs.chrome-version }}
          ${{ steps.setup-chrome.outputs.chrome-path }} --version
      
      - uses: nanasess/setup-chromedriver@v2
        with:
          # Optional: do not specify to match Chrome's version
          chromedriver-version: '2.28'
      - name: Print chromedriver path
        run: |
          echo "Chromedriver is installed at ${{ env.CHROMEDRIVER_PATH }}"

      - run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
      
      - name: Print chrome binary location
        run: which google-chrome

      - name: Print chromium binary location
        run: which chromium
    
      - name: Print chromium-browser binary location
        run: which chromium-browser

      - name: Instalar dependencias
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
      
      - name: Ejecutar pruebas de integraci√≥n
        run: |
          source .venv/bin/activate
          pytest tests/test_search.py -k test_title
